## CONFIG ##

IDIR=include
SRCDIR=src
ODIR=obj
BINDIR=.

# binary name, default name of dir
NAME = $(shell readlink -f . | xargs basename)

# global links
LDFLAGS =

# compiler
CC=g++
# compiler flags
CXXFLAGS= -I$(IDIR) -Wall -pedantic -std=c++20
ifeq	($(DEBUG),true)
	# debugging flags
	CXXFLAGS += -g
	RODIR = $(ODIR)/debug
else
	# release flags
	CXXFLAGS += -O2
	RODIR = $(ODIR)/release
endif
ifeq	($(STATIC),true)
	# static links
	LDFLAGS +=
else
	# dynamic links
	LDFLAGS +=
endif

## END CONFIG ##

$(shell mkdir -p $(RODIR))
$(shell mkdir -p $(BINDIR))

# automatically find .h and .hpp
DEPS = $(shell find $(IDIR) -type f -regex '.*\.hp?p?')
# automatically find .c and .cpp and make the corresponding .o rule
OBJ = $(shell find $(SRCDIR) -type f -regex '.*\.cp?p?' | sed 's|\.cpp|.o|g;s|\.c|.o|g;s|^$(SRCDIR)/|$(RODIR)/|g')

build: $(BINDIR)/$(NAME)

$(RODIR)/%.o: $(SRCDIR)/%.c $(DEPS)
	$(CC) $(CXXFLAGS) -c -o $@ $<

$(RODIR)/%.o: $(SRCDIR)/%.cpp $(DEPS)
	$(CC) $(CXXFLAGS) -c -o $@ $<

$(BINDIR)/$(NAME): $(OBJ)
	$(CC) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

test: $(BINDIR)/$(NAME)
	$(BINDIR)/$(NAME)

clean:
	rm $(ODIR)/*/*.o

clear:
	rm $(BINDIR)/$(NAME)
